---
export interface Story {
  id: string;
  title: string;
  description: string;
  color: string;
}

const baseURL = Astro.url.origin;

const response = await fetch(`${baseURL}/api/stories`);
const text = await response.text();
console.log('Response text:', text);

try {
  const storiess = JSON.parse(text);
  console.log(storiess);
} catch (error) {
  console.error('Error parsing JSON:', error);
}

const stories = [
  {
     id: 'fullstack',
    title: 'Fullstack for the Win',
    description:
      'When the software layers unite, a new hero rises in the world of code.',
    color: '#007bff',
    content: `After attending re:Invent, a group of [adjective] developers decided to build a full-stack serverless application with Cloudflare. Their goal was to create a(n) [adjective] application that would [verb] people's lives.`
  },
  {
     id: 'fullstack',
    title: 'Fullstack for the Win',
    description:
      'When the software layers unite, a new hero rises in the world of code.',
    color: '#007bff',
    content: `After attending re:Invent, a group of [adjective] developers decided to build a full-stack serverless application with Cloudflare. Their goal was to create a(n) [adjective] application that would [verb] people's lives.`
  },
  {
     id: 'fullstack',
    title: 'Fullstack for the Win',
    description:
      'When the software layers unite, a new hero rises in the world of code.',
    color: '#007bff',
    content: `After attending re:Invent, a group of [adjective] developers decided to build a full-stack serverless application with Cloudflare. Their goal was to create a(n) [adjective] application that would [verb] people's lives.`
  }
];
---

<section>
  <div class='story-grid'>
    {
      stories.map((story, index) => (
        <a
          class='story-card'
          href={`/stories/${story.id}`}
          data-story-id={story.id}
          style={`background-color: ${story.color};`}>
            <h3>{story.title}</h3>
            <p>{story.description}</p>
        </a>
      ))
    }
  </div>
</section>

<script type="module">

  function navigateToStory(storyId: string | null) {
    window.open(`/stories/${storyId}`);
  }

  document.addEventListener('DOMContentLoaded', () => {
    const storyGrid = document.querySelector('.story-grid');
    if (storyGrid) {
      storyGrid.addEventListener('click', (event) => {
        const storyCard = (event.target as Element).closest('.story-card');
        if (storyCard) {
          const storyId = storyCard.getAttribute('data-story-id');
          navigateToStory(storyId);
        }
      });
    }
  });
</script>

<style>
  .story-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    padding: 1rem;
  }

  .story-card {
    text-decoration: none;
    border: 1px solid #ccc;
    border-radius: 4px;
    padding: 1rem;
    text-align: center;
    cursor: pointer;
    background: white;
    color: #fff;
    border: none;
    margin: 0;
    font-size: 0.8em;
    overflow: visible;
    text-transform: none;
    -webkit-appearance: button;
  }

  .story-card:hover {
    background-color: #f0f0f0;
  }
</style>